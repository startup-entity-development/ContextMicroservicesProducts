load_module modules/ngx_http_js_module.so;

events {
    worker_connections 1024;
}

http {

    underscores_in_headers on;

    js_path "/etc/nginx/app/";
    js_import module_auth.js;

    upstream product_service {
        server localhost;
        server product_gateway:3051 fail_timeout=10s;
    }

    upstream order_service {
        server localhost;
        server order_gateway:3052 fail_timeout=10s;
    }

    upstream email_service {
        server localhost;
        server email_gateway:3053 fail_timeout=10s;
    }

    upstream pricing_service {
        server localhost;
        server pricing_gateway:3054 fail_timeout=10s;
    }


    server {

        listen 80;
        server_name localhost;
        resolver 127.0.0.11;
        # Protect endpoints
        # ------------------------------------------------------------
        location ^~ /protected/product {

            auth_request /authenticate;
            auth_request_set $x_auth_user $sent_http_x_auth_user;
            auth_request_set $x_auth_id $sent_http_x_auth_id;
            auth_request_set $exception_message $sent_http_exception_message;
            auth_request_set $exception_code $sent_http_exception_code;
            error_page 401 = @auth_error_401;
            error_page 500 = @auth_error_500;
            error_page 400 = @auth_error_400;
   
            proxy_pass http://product_service;
            proxy_pass_request_headers on;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            proxy_set_header X-Auth-User $x_auth_user;
            proxy_set_header X-Auth-Id $x_auth_id;

        }
        
        location ^~ /protected/auth/ {
            auth_request /authenticate;
            auth_request_set $x_auth_user $sent_http_x_auth_user;
            auth_request_set $x_auth_id $sent_http_x_auth_id;
            auth_request_set $exception_message $sent_http_exception_message;
            auth_request_set $exception_code $sent_http_exception_code;
            error_page 401 = @auth_error_401;
            error_page 500 = @auth_error_500;
            error_page 400 = @auth_error_400;
            proxy_pass http://auth_gateway:3050;
            proxy_pass_request_headers on;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Auth-User $x_auth_user;
            proxy_set_header X-Auth-Id $x_auth_id;
        }
        
        location ^~ /protected/order {
            auth_request /authenticate;
            auth_request_set $x_auth_user $sent_http_x_auth_user;
            auth_request_set $x_auth_id $sent_http_x_auth_id;
            auth_request_set $exception_message $sent_http_exception_message;
            auth_request_set $exception_code $sent_http_exception_code;
            error_page 401 = @auth_error_401;
            error_page 500 = @auth_error_500;
            error_page 400 = @auth_error_400;
            proxy_pass http://order_service;
            proxy_pass_request_headers on;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Auth-User $x_auth_user;
            proxy_set_header X-Auth-Id $x_auth_id;
        }

        location ^~ /protected/email {

            auth_request /authenticate;
            auth_request_set $x_auth_user $sent_http_x_auth_user;
            auth_request_set $x_auth_id $sent_http_x_auth_id;
            auth_request_set $exception_message $sent_http_exception_message;
            auth_request_set $exception_code $sent_http_exception_code;
            error_page 401 = @auth_error_401;
            error_page 500 = @auth_error_500;
            error_page 400 = @auth_error_400;
   
            proxy_pass http://email_service;
            proxy_pass_request_headers on;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            proxy_set_header X-Auth-User $x_auth_user;
            proxy_set_header X-Auth-Id $x_auth_id;
        }

        location ^~ /protected/pricing {
            auth_request /authenticate;
            auth_request_set $x_auth_user $sent_http_x_auth_user;
            auth_request_set $x_auth_id $sent_http_x_auth_id;
            auth_request_set $exception_message $sent_http_exception_message;
            auth_request_set $exception_code $sent_http_exception_code;
            error_page 401 = @auth_error_401;
            error_page 500 = @auth_error_500;
            error_page 400 = @auth_error_400;

            proxy_pass http://pricing_service;
            proxy_pass_request_headers on;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;

            proxy_set_header X-Auth-User $x_auth_user;
            proxy_set_header X-Auth-Id $x_auth_id;
        }
        # Public endpoints
        # ------------------------------------------------------------
        location ^~ /public/product {
            proxy_pass http://product_service;
            proxy_pass_request_headers on;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location ^~ /public/auth/ {
            proxy_pass http://auth_gateway:3050;
            proxy_pass_request_headers on;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # authentication module
        # ------------------------------------------------------------

        location = /authenticate {
            internal;
            js_content module_auth.authGuard;
        }

        # error pages
        # ------------------------------------------------------------

        location @auth_error_400 {
            internal;
            default_type application/json;
            add_header 'Content-Type' 'application/json charset=UTF-8';
            set $error_message "$exception_message";
            set $error_code "$exception_code";
            return 500 ' {
                "message" : "Bad Request, NGINX internal error",
                "exception_message":"$error_message",
                "exception_code":"$error_code"
            }
            ';
        }

        location @auth_error_401 {
            internal;
            default_type application/json;
            add_header 'Content-Type' 'application/json charset=UTF-8';
            set $error_message "$exception_message";
            set $error_code "$exception_code";
            return 401 '{
                "message" : "Unauthorized, NGINX internal error",
                "exception_message":"$error_message",
                "exception_code":"$error_code"
            }';
        }
        location @auth_error_500 {
            internal;
            default_type application/json;
            add_header 'Content-Type' 'application/json charset=UTF-8';
            set $error_message "$exception_message";
            set $error_code "$exception_code";

            return 500 ' {
                "message" : "Internal server error, NGINX internal error",
                "exception_message":"$error_message",
                "exception_code":"$error_code"
            }
            ';
        }
        
}
    
}
